{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nvar _excluded = [\"label\", \"children\", \"key\", \"type\"];\nimport { createVNode as _createVNode } from \"vue\";\nimport SubMenu from '../SubMenu';\nimport ItemGroup from '../ItemGroup';\nimport MenuDivider from '../Divider';\nimport MenuItem from '../MenuItem';\nimport { ref, shallowRef, watch } from 'vue';\nfunction convertItemsToNodes(list, store, parentMenuInfo) {\n  return (list || []).map(function (opt, index) {\n    if (opt && _typeof(opt) === 'object') {\n      var label = opt.label,\n        children = opt.children,\n        key = opt.key,\n        type = opt.type,\n        restProps = _objectWithoutProperties(opt, _excluded);\n      var mergedKey = key !== null && key !== void 0 ? key : \"tmp-\".concat(index);\n      // 此处 eventKey === key, 移除 children 后可以移除 eventKey\n      var parentKeys = parentMenuInfo ? parentMenuInfo.parentKeys.slice() : [];\n      var childrenEventKeys = [];\n      // if\n      var menuInfo = {\n        eventKey: mergedKey,\n        key: mergedKey,\n        parentEventKeys: ref(parentKeys),\n        parentKeys: ref(parentKeys),\n        childrenEventKeys: ref(childrenEventKeys),\n        isLeaf: false\n      };\n      // MenuItemGroup & SubMenuItem\n      if (children || type === 'group') {\n        if (type === 'group') {\n          var _childrenNodes = convertItemsToNodes(children, store, parentMenuInfo);\n          // Group\n          return _createVNode(ItemGroup, _objectSpread(_objectSpread({\n            \"key\": mergedKey\n          }, restProps), {}, {\n            \"title\": label\n          }), {\n            default: function _default() {\n              return [_childrenNodes];\n            }\n          });\n        }\n        store.set(mergedKey, menuInfo);\n        if (parentMenuInfo) {\n          parentMenuInfo.childrenEventKeys.push(mergedKey);\n        }\n        // Sub Menu\n        var childrenNodes = convertItemsToNodes(children, store, {\n          childrenEventKeys: childrenEventKeys,\n          parentKeys: [].concat(parentKeys, mergedKey)\n        });\n        return _createVNode(SubMenu, _objectSpread(_objectSpread({\n          \"key\": mergedKey\n        }, restProps), {}, {\n          \"title\": label\n        }), {\n          default: function _default() {\n            return [childrenNodes];\n          }\n        });\n      }\n      // MenuItem & Divider\n      if (type === 'divider') {\n        return _createVNode(MenuDivider, _objectSpread({\n          \"key\": mergedKey\n        }, restProps), null);\n      }\n      menuInfo.isLeaf = true;\n      store.set(mergedKey, menuInfo);\n      return _createVNode(MenuItem, _objectSpread({\n        \"key\": mergedKey\n      }, restProps), {\n        default: function _default() {\n          return [label];\n        }\n      });\n    }\n    return null;\n  }).filter(function (opt) {\n    return opt;\n  });\n}\n// FIXME: Move logic here in v4\n/**\n * We simply convert `items` to VueNode for reuse origin component logic. But we need move all the\n * logic from component into this hooks when in v4\n */\nexport default function useItems(props) {\n  var itemsNodes = shallowRef([]);\n  var hasItmes = ref(false);\n  var store = shallowRef(new Map());\n  watch(function () {\n    return props.items;\n  }, function () {\n    var newStore = new Map();\n    hasItmes.value = false;\n    if (props.items) {\n      hasItmes.value = true;\n      itemsNodes.value = convertItemsToNodes(props.items, newStore);\n    } else {\n      itemsNodes.value = undefined;\n    }\n    store.value = newStore;\n  }, {\n    immediate: true,\n    deep: true\n  });\n  return {\n    itemsNodes: itemsNodes,\n    store: store,\n    hasItmes: hasItmes\n  };\n}","map":{"version":3,"names":["_objectSpread","_objectWithoutProperties","_typeof","_excluded","createVNode","_createVNode","SubMenu","ItemGroup","MenuDivider","MenuItem","ref","shallowRef","watch","convertItemsToNodes","list","store","parentMenuInfo","map","opt","index","label","children","key","type","restProps","mergedKey","concat","parentKeys","slice","childrenEventKeys","menuInfo","eventKey","parentEventKeys","isLeaf","_childrenNodes","default","_default","set","push","childrenNodes","filter","useItems","props","itemsNodes","hasItmes","Map","items","newStore","value","undefined","immediate","deep"],"sources":["D:/JAVA/workplace/Aggregate-search-master/search-frontend-master/node_modules/ant-design-vue/es/menu/src/hooks/useItems.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nvar _excluded = [\"label\", \"children\", \"key\", \"type\"];\nimport { createVNode as _createVNode } from \"vue\";\nimport SubMenu from '../SubMenu';\nimport ItemGroup from '../ItemGroup';\nimport MenuDivider from '../Divider';\nimport MenuItem from '../MenuItem';\nimport { ref, shallowRef, watch } from 'vue';\nfunction convertItemsToNodes(list, store, parentMenuInfo) {\n  return (list || []).map(function (opt, index) {\n    if (opt && _typeof(opt) === 'object') {\n      var label = opt.label,\n        children = opt.children,\n        key = opt.key,\n        type = opt.type,\n        restProps = _objectWithoutProperties(opt, _excluded);\n      var mergedKey = key !== null && key !== void 0 ? key : \"tmp-\".concat(index);\n      // 此处 eventKey === key, 移除 children 后可以移除 eventKey\n      var parentKeys = parentMenuInfo ? parentMenuInfo.parentKeys.slice() : [];\n      var childrenEventKeys = [];\n      // if\n      var menuInfo = {\n        eventKey: mergedKey,\n        key: mergedKey,\n        parentEventKeys: ref(parentKeys),\n        parentKeys: ref(parentKeys),\n        childrenEventKeys: ref(childrenEventKeys),\n        isLeaf: false\n      };\n      // MenuItemGroup & SubMenuItem\n      if (children || type === 'group') {\n        if (type === 'group') {\n          var _childrenNodes = convertItemsToNodes(children, store, parentMenuInfo);\n          // Group\n          return _createVNode(ItemGroup, _objectSpread(_objectSpread({\n            \"key\": mergedKey\n          }, restProps), {}, {\n            \"title\": label\n          }), {\n            default: function _default() {\n              return [_childrenNodes];\n            }\n          });\n        }\n        store.set(mergedKey, menuInfo);\n        if (parentMenuInfo) {\n          parentMenuInfo.childrenEventKeys.push(mergedKey);\n        }\n        // Sub Menu\n        var childrenNodes = convertItemsToNodes(children, store, {\n          childrenEventKeys: childrenEventKeys,\n          parentKeys: [].concat(parentKeys, mergedKey)\n        });\n        return _createVNode(SubMenu, _objectSpread(_objectSpread({\n          \"key\": mergedKey\n        }, restProps), {}, {\n          \"title\": label\n        }), {\n          default: function _default() {\n            return [childrenNodes];\n          }\n        });\n      }\n      // MenuItem & Divider\n      if (type === 'divider') {\n        return _createVNode(MenuDivider, _objectSpread({\n          \"key\": mergedKey\n        }, restProps), null);\n      }\n      menuInfo.isLeaf = true;\n      store.set(mergedKey, menuInfo);\n      return _createVNode(MenuItem, _objectSpread({\n        \"key\": mergedKey\n      }, restProps), {\n        default: function _default() {\n          return [label];\n        }\n      });\n    }\n    return null;\n  }).filter(function (opt) {\n    return opt;\n  });\n}\n// FIXME: Move logic here in v4\n/**\n * We simply convert `items` to VueNode for reuse origin component logic. But we need move all the\n * logic from component into this hooks when in v4\n */\nexport default function useItems(props) {\n  var itemsNodes = shallowRef([]);\n  var hasItmes = ref(false);\n  var store = shallowRef(new Map());\n  watch(function () {\n    return props.items;\n  }, function () {\n    var newStore = new Map();\n    hasItmes.value = false;\n    if (props.items) {\n      hasItmes.value = true;\n      itemsNodes.value = convertItemsToNodes(props.items, newStore);\n    } else {\n      itemsNodes.value = undefined;\n    }\n    store.value = newStore;\n  }, {\n    immediate: true,\n    deep: true\n  });\n  return {\n    itemsNodes: itemsNodes,\n    store: store,\n    hasItmes: hasItmes\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}